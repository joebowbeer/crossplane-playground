---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: argocd-vcluster
spec:
  compositeTypeRef:
    apiVersion: example.crossplane.io/v1
    kind: ArgoVCluster
  mode: Pipeline
  pipeline:
  - step: create-vcluster
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{- $xr := getCompositeResource . -}}
          {{- $name := $xr.metadata.name -}}
          {{- $namespace := $name -}}
          ---
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              {{ setResourceNameAnnotation $name }}
            name: {{ $name }}
          spec:
            forProvider:
              chart:
                name: vcluster
                repository: https://charts.loft.sh
                version: 0.26.0
              namespace: {{ $namespace }}
              values:
                controlPlane:
                  proxy:
                    extraSANs:
                    - {{ $name }}.{{ $namespace }}
              # wait: true
            providerConfigRef:
              name: helm-provider
            rollbackLimit: 1
  - step: observe-vcluster-secret
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{- $xr := getCompositeResource . -}}
          {{- $name := $xr.metadata.name -}}
          {{- $namespace := $name -}}
          {{- $obsName := print "obs-" $name -}}
          {{- $vcName := print "vc-" $name -}}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            annotations:
              {{ setResourceNameAnnotation $obsName }}
              {{- if empty (get (getComposedResource . $obsName) "status.atProvider.manifest.data") }}
              gotemplating.fn.crossplane.io/ready: "False"
              {{- end }}
          spec:
            managementPolicies: ["Observe"]
            forProvider:
              manifest:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: {{ $vcName }}
                  namespace: {{ $namespace }}
                # data:
                #   certificate-authority: ""
                #   client-certificate: ""
                #   client-key: ""
            providerConfigRef:
              name: kubernetes-provider
  - step: register-argocd-cluster
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{- $xr := getCompositeResource . -}}
          {{- $name := $xr.metadata.name -}}
          {{- $namespace := $name -}}
          {{- $obsName := print "obs-" $name -}}
          {{- $secretName := print "xp-" $name -}}
          {{- $res := getComposedResource . $obsName -}}
          {{- if get $res "status.atProvider.manifest.data" }}
          ---
          {{- $data := $res.status.atProvider.manifest.data }}
          apiVersion: v1
          kind: Secret
          metadata:
            annotations:
              {{ setResourceNameAnnotation $secretName }}
              gotemplating.fn.crossplane.io/ready: "True"
            labels:
              argocd.argoproj.io/secret-type: cluster
            name: {{ $secretName }}
            namespace: argocd
          type: Opaque
          stringData:
            name: {{ $name }}
            server: https://{{ $name }}.{{ $namespace }}:443
            config: |
              {
                "tlsClientConfig": {
                  "insecure": false,
                  "caData": {{ index $data "certificate-authority" | quote }},
                  "certData": {{ index $data "client-certificate" | quote }},
                  "keyData": {{ index $data "client-key" | quote }}
                }
              }
          {{- end }}
  - step: auto-ready
    functionRef:
      name: function-auto-ready
