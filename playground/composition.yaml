apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: function-kcl-composition
spec:
  compositeTypeRef:
    apiVersion: cnp.example.org/v1alpha1
    kind: XCluster
  mode: Pipeline
  pipeline:
  - step: vcluster-helm-release
    functionRef:
      name: kcl-function
    input:
      apiVersion: krm.kcl.dev/v1alpha1
      kind: KCLInput
      metadata:
        annotations:
          "krm.kcl.dev/default_ready": "True"
      spec:
        source: |
          name = option("params")?.oxr?.metadata.name or "vcluster-helm-release"
          release = {
            apiVersion = "helm.crossplane.io/v1beta1"
            kind = "Release"
            metadata.name = name
            metadata.annotations: {
              "crossplane.io/external-name": name
            }
            spec.forProvider = {
              chart = {
                name = "vcluster"
                repository = "https://charts.loft.sh"
                version = "0.26.0"
              }
              namespace = name
              # wait = True
            }
            spec.providerConfigRef = {
              name = "helm-provider"
            }
            spec.rollbackLimit = 3
          }
          items = [release]
  - step: vcluster-secret
    functionRef:
      name: kcl-function
    input:
      apiVersion: krm.kcl.dev/v1alpha1
      kind: KCLInput
      spec:
        target: Resources
        resources:
        - apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: foobar
          spec:
            forProvider:
              chart:
                name: vcluster
                repository: https://charts.loft.sh
                version: 0.26.0
              namespace: foobar
              # wait: true
            providerConfigRef:
              name: helm-provider
            rollbackLimit: 3
        name: vcluster-helm-release