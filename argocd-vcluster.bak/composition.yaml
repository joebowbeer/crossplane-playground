---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: argocd-vcluster
spec:
  compositeTypeRef:
    apiVersion: example.crossplane.io/v1
    kind: ArgoVCluster
  mode: Pipeline
  pipeline:
  - step: pull-vcluster-secret
    functionRef:
      name: function-extra-resources
    input:
      apiVersion: extra-resources.fn.crossplane.io/v1beta1
      kind: Input
      spec:
        extraResources:
          - apiVersion: v1
            kind: Secret
            into: Secret
            type: Selector
            selector:
              maxMatch: 2 # two match but only one is used
              matchLabels:
                - key: vcluster-name
                  valueFromFieldPath: metadata.name
        policy:
          resolution: Optional
  - step: create-vcluster
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{- $xr := getCompositeResource . -}}
          {{- $name := $xr.metadata.name -}}
          {{- $namespace := $name -}}
          ---
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              {{ setResourceNameAnnotation $name }}
            name: {{ $name }}
          spec:
            forProvider:
              chart:
                name: vcluster
                repository: https://charts.loft.sh
                version: 0.26.0
              namespace: {{ $namespace }}
              values:
                controlPlane:
                  proxy:
                    extraSANs:
                    - {{ $name }}.{{ $namespace }}
              # wait: true
            providerConfigRef:
              name: helm-provider
            rollbackLimit: 1
  - step: register-argocd-cluster
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
            {{- $Secrets := index (index .context "apiextensions.crossplane.io/extra-resources") "Secret" }}
            {{- range $i, $A := $Secrets }}
            {{- if hasPrefix "vc-" $A.metadata.name }}
            {{- $name := trimPrefix "vc-" $A.metadata.name }}
            {{- $namespace := $name }}
            ---
            apiVersion: v1
            kind: Secret
            metadata:
              annotations:
                {{ setResourceNameAnnotation $name }}
                gotemplating.fn.crossplane.io/ready: "True"
              labels:
                argocd.argoproj.io/secret-type: cluster
              name: {{ $name }}
              namespace: argocd
            type: Opaque
            stringData:
              name: {{ $name }}
              server: https://{{ $name }}.{{ $namespace }}:443
              config: |
                {
                  "tlsClientConfig": {
                    "insecure": false,
                    "caData": {{ index $A.data "certificate-authority" | quote }},
                    "certData": {{ index $A.data "client-certificate" | quote }},
                    "keyData": {{ index $A.data "client-key" | quote }}
                  }
                }
            {{- end }}
            {{- end }}
  - step: auto-ready
    functionRef:
      name: function-auto-ready
