---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcluster.cnp.example.org
spec:
  compositeTypeRef:
    apiVersion: cnp.example.org/v1alpha1
    kind: XCluster
  mode: Pipeline
  pipeline:
    - step: render-templates
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- $name := print "xc-" .observed.composite.resource.metadata.name -}}
            {{- $namespace := $name -}}
            {{- $objName := print "observed-vc-" $name -}}
            ##- $tlsData := get (getComposedResource . $objName) "status.atProvider.manifest.data" | default dict -##
            ---
            apiVersion: helm.crossplane.io/v1beta1
            kind: Release
            metadata:
              annotations:
                {{ setResourceNameAnnotation $name }}
              name: {{ $name }}
            spec:
              forProvider:
                chart:
                  name: vcluster
                  repository: https://charts.loft.sh
                  version: 0.26.0
                namespace: {{ $namespace }}
                values:
                  controlPlane:
                    proxy:
                      extraSANs:
                      - {{ $name }}.{{ $namespace }}
                # wait: true
              providerConfigRef:
                name: helm-provider
              rollbackLimit: 1
            ---
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              annotations:
                {{ setResourceNameAnnotation $objName }}
            spec:
              managementPolicies: ["Observe"]
              forProvider:
                manifest:
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    name: vc-{{ $name }}
                    namespace: {{ $namespace }}
              providerConfigRef:
                name: kubernetes-provider
            ---
            apiVersion: v1
            kind: Secret
            metadata:
              annotations:
                {{ setResourceNameAnnotation (print "argocd-vc-" $name) }}
              labels:
                argocd.argoproj.io/secret-type: cluster
              name: vc-{{ $name }}
              namespace: argocd
            type: Opaque
            stringData:
              name: {{ $name }}
              server: https://{{ $name }}.{{ $namespace }}:443
              config: |
                {
                  "tlsClientConfig": {
                    "insecure": false,
                    "caData": {{ get (getComposedResource . $objName) "status.atProvider.manifest.data.certificate-authority" | quote }},
                    "certData": {{ get (getComposedResource . $objName) "status.atProvider.manifest.data.client-certificate" | quote }},
                    "keyData": {{ get (getComposedResource . $objName) "status.atProvider.manifest.data.client-key" | quote }}
                  }
                }
            # ---
            # apiVersion: kubernetes.crossplane.io/v1alpha1
            # kind: Object
            # metadata:
            #   annotations:
            #     {{ setResourceNameAnnotation "argocd-guestbook-application" }}
            # spec:
            #   forProvider:
            #     manifest:
            #       apiVersion: argoproj.io/v1alpha1
            #       kind: Application
            #       metadata:
            #         name: {{ $name }}-guestbook
            #         namespace: argocd
            #       spec:
            #         destination:
            #           name: {{ $name }}
            #           namespace: guestbook
            #         project: default
            #         source:
            #           path: guestbook
            #           repoURL: https://github.com/argoproj/argocd-example-apps.git
            #           targetRevision: HEAD
            #         syncPolicy:
            #           automated:
            #             prune: true
            #           syncOptions:
            #           - CreateNamespace=true
    - step: auto-ready
      functionRef:
        name: function-auto-ready
    - step: sequencer
      functionRef:
        name: function-sequencer
      input:
        apiVersion: sequencer.fn.crossplane.io/v1beta1
        kind: Input
        rules:
        - sequence:
          - ^observed-vc-.*$
          - ^argocd-vc-.*$
